package dev._2lstudios.exploitfixer.utils;

import java.io.ByteArrayInputStream;
import java.io.DataInput;
import java.io.DataInputStream;
import java.io.IOException;
import java.nio.charset.Charset;

import com.github.steveice10.opennbt.NBTIO;
import com.github.steveice10.opennbt.tag.builtin.Tag;

import io.netty.buffer.ByteBuf;

public class PacketUtil {
    public static String readCustomPayload(ByteBuf buf) throws IOException {
        // Assuming you have a byte array named data
        buf.readByte(); // Read the channel
        int length = buf.readByte(); // Read the length of the channel
        String channel = buf.readCharSequence(length, Charset.forName("utf-8")).toString(); // Read the channel with

        if (channel.equalsIgnoreCase("MC|BEdit")) {
            buf.readBytes(5); // Space

            // Creating a byte array with enough capacity
            byte[] bytes = new byte[buf.readableBytes()];

            // Copying the readable bytes from the ByteBuf into the byte array
            buf.readBytes(bytes);

            // Parsing the byte array into an NBTTag object
            Tag nbt = NBTIO.readTag((DataInput) new DataInputStream(new ByteArrayInputStream(bytes)));

            return nbt.getValue().toString();
        }

        return "";
    }
}
